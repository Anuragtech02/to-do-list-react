{"version":3,"sources":["components/list/List.module.css","App.module.css","components/list/List.jsx","App.jsx","index.js"],"names":["module","exports","List","item","callback","useState","styles","container","newClass","setNewClass","completeClass","setCompleteClass","opacityClass","setOpacityClass","sendReload","className","classNames","Card","card","CardContent","cardContent","Typography","color","checkBox","IconButton","onClick","completed","completedOpacity","aria-label","containerFall","todos","todoIndex","localStorage","getItem","JSON","parse","indexOf","splice","setItem","stringify","removeLocal","App","input","setInput","list","setList","error","setError","condition","setCondition","helper","setHelper","reload","setReload","found","useEffect","getLocal","console","log","i","callBack","value","map","todo","handleClick","e","preventDefault","trim","find","element","push","storeLocal","document","getElementById","reset","variant","gutterBottom","noValidate","autoComplete","id","onSubmit","TextField","label","helperText","onChange","target","disabled","index","key","ReactDom","render"],"mappings":"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","file":"static/js/main.35eed012.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"List_container__Lgksa\",\"cardContent\":\"List_cardContent__R7kV4\",\"item\":\"List_item__3Zt7n\",\"card\":\"List_card__3MMEL\",\"containerFall\":\"List_containerFall__34oy4\",\"displayNone\":\"List_displayNone__2kHzR\",\"completed\":\"List_completed__5CLbJ\",\"completedOpacity\":\"List_completedOpacity__1UMPz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"TextField\":\"App_TextField__1DjAL\"};","import React, { useState, useEffect } from \"react\";\nimport { Card, Typography, CardContent, IconButton } from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport styles from \"./List.module.css\";\nimport classNames from \"classnames\";\n\nconst List = ({ item, callback }) => {\n  const [newClass, setNewClass] = useState(styles.container);\n  const [completeClass, setCompleteClass] = useState(styles.item);\n  const [opacityClass, setOpacityClass] = useState(styles.container);\n\n  const removeLocal = () => {\n    let todos;\n    if (localStorage.getItem(\"todos\") === null) {\n      todos = [];\n    } else {\n      todos = JSON.parse(localStorage.getItem(\"todos\"));\n    }\n    const todoIndex = todos.indexOf(item);\n    todos.splice(todoIndex, 1);\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n    sendReload();\n  };\n\n  function sleep(milliseconds) {\n    const date = Date.now();\n    let currentDate = null;\n    do {\n      currentDate = Date.now();\n    } while (currentDate - date < milliseconds);\n  }\n\n  const sendReload = () => {\n    callback(true);\n  };\n\n  const deleteBox = () => {\n    setNewClass(styles.containerFall);\n    removeLocal();\n  };\n\n  const completed = () => {\n    setCompleteClass(styles.completed);\n    setOpacityClass(styles.completedOpacity);\n  };\n\n  return (\n    <div className={classNames(styles.container, newClass, opacityClass)}>\n      <Card className={styles.card}>\n        <CardContent className={styles.cardContent}>\n          <Typography\n            color=\"textPrimary\"\n            className={classNames(styles.item, completeClass)}\n          >\n            {item}\n          </Typography>\n          <div className={styles.checkBox}>\n            <IconButton\n              onClick={completed}\n              color=\"secondary\"\n              aria-label=\"add\"\n              className=\"icon-btn\"\n            >\n              <CheckIcon />\n            </IconButton>\n          </div>\n          <div className=\"delete-box\">\n            <IconButton\n              onClick={deleteBox}\n              color=\"secondary\"\n              aria-label=\"delete\"\n              className=\"icon-btn\"\n            >\n              <DeleteForeverIcon />\n            </IconButton>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./App.module.css\";\nimport { Filter, List } from \"./components\";\nimport { Typography, IconButton, TextField } from \"@material-ui/core\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\n\nconst App = () => {\n  const [input, setInput] = useState(\"\");\n  const [list, setList] = useState([]);\n  const [error, setError] = useState(false);\n  const [condition, setCondition] = useState(true);\n  const [helper, setHelper] = useState(\"\");\n  const [reload, setReload] = useState(false);\n\n  let found = 1;\n  let todos;\n  if (localStorage.getItem(\"todos\") === null) {\n    todos = [];\n  } else {\n    todos = JSON.parse(localStorage.getItem(\"todos\"));\n  }\n\n  useEffect(() => {\n    found = 1;\n    getLocal();\n    let i = 0;\n    console.log(`Reloaded : ${reload} x ${i + 1}`);\n  }, []);\n\n  const callBack = (value) => {\n    setReload(value);\n  };\n\n  const storeLocal = (list) => {\n    todos.push(list);\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const getLocal = () => {\n    todos.map(function (todo) {\n      setList((list) => [...list, todo]);\n    });\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    if (input.trim() === \"\") {\n      setError(true);\n      setHelper(\"Task can't be empty !\");\n    } else {\n      setError(false);\n      setHelper(\"\");\n      if (list[0] === null) {\n        setList([input]);\n      } else {\n        todos.find((element) => element === input.trim())\n          ? (found = 1) && setHelper(\"Task already exists !\")\n          : (found = 0);\n        ///found ? (found = 1) : setList((list) => [...list, input]);\n        if (found) {\n        } else {\n          setList((list) => [...list, input]);\n          storeLocal(input);\n        }\n        //  storeLocal(input);\n        document.getElementById(\"formInput\").reset();\n      }\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <Typography variant=\"h2\" gutterBottom>\n        To-Do List\n      </Typography>\n      <div className=\"container\">\n        <form\n          noValidate\n          autoComplete=\"off\"\n          id=\"formInput\"\n          onSubmit={handleClick}\n        >\n          <TextField\n            error={error}\n            className={styles.TextField}\n            id=\"filled-basic\"\n            label=\"Add Task\"\n            variant=\"filled\"\n            color=\"primary\"\n            helperText={helper}\n            onChange={(e) => {\n              setInput(e.target.value);\n              setCondition(false);\n              setError(false);\n              setHelper(\"\");\n            }}\n          />\n          <IconButton\n            disabled={condition}\n            color=\"primary\"\n            aria-label=\"add\"\n            className=\"icon-btn\"\n            onClick={handleClick}\n          >\n            <AddBoxIcon />\n          </IconButton>\n        </form>\n      </div>\n      {list.map((todo, index) => (\n        <List callback={callBack} item={todo} key={index} />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}